/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  MyComponent1 as CompOne
} from './comp1/src/comp1';

declare global {
  interface HTMLCompOneElement extends CompOne, HTMLElement {
  }
  var HTMLCompOneElement: {
    prototype: HTMLCompOneElement;
    new (): HTMLCompOneElement;
  };
  interface HTMLElementTagNameMap {
    "comp-one": HTMLCompOneElement;
  }
  interface ElementTagNameMap {
    "comp-one": HTMLCompOneElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "comp-one": JSXElements.CompOneAttributes;
    }
  }
  namespace JSXElements {
    export interface CompOneAttributes extends HTMLAttributes {
      first?: string;
      last?: string;
    }
  }
}


import {
  MyComponent2 as CompTwo
} from './comp2/src/comp2';

declare global {
  interface HTMLCompTwoElement extends CompTwo, HTMLElement {
  }
  var HTMLCompTwoElement: {
    prototype: HTMLCompTwoElement;
    new (): HTMLCompTwoElement;
  };
  interface HTMLElementTagNameMap {
    "comp-two": HTMLCompTwoElement;
  }
  interface ElementTagNameMap {
    "comp-two": HTMLCompTwoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "comp-two": JSXElements.CompTwoAttributes;
    }
  }
  namespace JSXElements {
    export interface CompTwoAttributes extends HTMLAttributes {
      first?: string;
      last?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
